<?php/** * Created by PhpStorm. * User: Administrator * Date: 2019/1/21 * Time: 11:01 */namespace app\admin\controller;/* * 提现管理 */use app\admin\Controller;use think\Db;use think\exception\HttpException;use app\common\model\Withdraw as WithdrawModel;class Withdraw extends Controller{    /**     * 提现列表     */    public  function index(){        $listRows = 10;        $list=Db::name('withdraw')            ->alias('a')            ->field('a.*,b.id as user_id,b.nickname as user_name,is_bindbank,realname,phone,idcard')            ->join('__USER__ b','a.user_id=b.id')            ->order('id desc')            ->paginate($listRows, false, ['query' => $this->request->get()]);        $count=count($list);        $this->view->assign('list',$list);        $this->view->assign('count',$count);        $WithdrawModel=new WithdrawModel();        $withdrawStatus=$WithdrawModel->getWithdrawStatus();        $this->view->assign('withdrawStatus',$withdrawStatus);        $this->view->assign("page", $list->render());        return $this->view->fetch();    }    /**     * 提现信息的审核     */    public  function  edit(){        $id=$this->request->param('id');        if ($this->request->isAjax()) {            $data['type'] = $this->request->post('type');            $data['check_time'] =time();            $goods = Db::name('withdraw')->where('id',$id)->update($data);            if ($goods) {                //修改钱包的金额                $userInfo=$this->request->post();                if((int)$userInfo['type']==2){                    $moneyInfo=Db::name('user')->field('money')->where('id',$userInfo['user_id'])->find();                    Db::name('user')->where('id',$userInfo['user_id'])->setField('money',(string)$moneyInfo['money']+$userInfo['money']);                    //减少钱包里的待结算                 //   $walletInfo=Db::name('wallet')->field('wait_money,block_money')->where('id',$userInfo['user_id'])->find();                 //   Db::name('wallet')->where('id',$userInfo['user_id'])->setField('wait_money',$walletInfo['wait_money']-$userInfo['money']);                //    Db::name('wallet')->where('id',$userInfo['user_id'])->setField('block_money',$walletInfo['block_money']-$userInfo['money']);                }                if((int)$userInfo['type']==1){                    $walletInfo=Db::name('wallet')->field('wait_money,block_money')->where('user_id',$userInfo['user_id'])->find();                    Db::name('wallet')->where('user_id',$userInfo['user_id'])->setField('wait_money',(string)$walletInfo['wait_money']-$userInfo['money']);                    Db::name('wallet')->where('user_id',$userInfo['user_id'])->setField('block_money',(string)$walletInfo['block_money']-$userInfo['money']);                }           return ajax_return_adv('修改成功');            } else {                return ajax_return_adv('修改失败');            }        } else {            //获取到该数据的值            if (!$id) {                throw new Exception("缺少参数ID");            }            $list=Db::name('withdraw')                ->alias('a')                ->field('a.*,b.nickname as user_name,b.bank_no,b.bank_username,b.bank_img,c.name as bank_name')                ->join('__USER__ b','a.user_id=b.id')                ->join('__BANK__ c','b.bank_id=c.id')                ->where('a.id',$id)                ->find();            if (!$list) {                throw new HttpException(404, '该记录不存在');            }            $this->view->assign('list', $list);            //审核类型            $WithdrawModel=new WithdrawModel();            $withdrawStatus=$WithdrawModel->getWithdrawStatus();            $this->view->assign('withdrawStatus',$withdrawStatus);            return $this->view->fetch();        }    }}